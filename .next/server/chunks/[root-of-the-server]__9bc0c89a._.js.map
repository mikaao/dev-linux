{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///root/src/app/api/pontos/%5Bcod_estacao%5D/route.ts"],"sourcesContent":["// src/app/api/pontos/[cod_estacao]/route.ts\r\nimport { NextResponse } from 'next/server';\r\nimport mysql from 'mysql2/promise';\r\n\r\nexport async function GET(\r\n  request: Request,\r\n  { params }: { params: { cod_estacao: string } }\r\n) {\r\n  const codEstacao = params.cod_estacao;\r\n\r\n  try {\r\n    const connection = await mysql.createConnection({\r\n      host: '127.0.0.1',\r\n      user: 'root',\r\n      password: '@M1ch43l52', // Sua senha\r\n      database: 'bancotr',\r\n    });\r\n\r\n    const [rows] = await connection.execute(\r\n      'SELECT nponto, id, traducao_id, cod_origem FROM id_ponto WHERE cod_estacao = ? ORDER BY id',\r\n      [codEstacao]\r\n    );\r\n\r\n    await connection.end();\r\n\r\n    return NextResponse.json(rows);\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n    const errorMessage = error instanceof Error ? error.message : 'Erro desconhecido';\r\n    return new NextResponse(\r\n      JSON.stringify({ message: 'Erro ao buscar pontos no banco.', error: errorMessage }),\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":"AAAA,4CAA4C;;;;AAC5C;AACA;;;AAEO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAAuC;IAE/C,MAAM,aAAa,OAAO,WAAW;IAErC,IAAI;QACF,MAAM,aAAa,MAAM,mIAAA,CAAA,UAAK,CAAC,gBAAgB,CAAC;YAC9C,MAAM;YACN,MAAM;YACN,UAAU;YACV,UAAU;QACZ;QAEA,MAAM,CAAC,KAAK,GAAG,MAAM,WAAW,OAAO,CACrC,8FACA;YAAC;SAAW;QAGd,MAAM,WAAW,GAAG;QAEpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC9D,OAAO,IAAI,gIAAA,CAAA,eAAY,CACrB,KAAK,SAAS,CAAC;YAAE,SAAS;YAAmC,OAAO;QAAa,IACjF;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}